% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tapseq_input.R
\docType{methods}
\name{TAPseqSeqTemplates}
\alias{TAPseqSeqTemplates}
\alias{TAPseqSeqTemplates,GRanges-method}
\alias{TAPseqSeqTemplates,GRangesList-method}
\title{Create TAPseq sequence templates}
\usage{
TAPseqSeqTemplates(transcripts, genome,
  beads_oligo = "CTACACGACGCTCTTCCGATCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT")

\S4method{TAPseqSeqTemplates}{GRanges}(transcripts, genome,
  beads_oligo = "CTACACGACGCTCTTCCGATCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT")

\S4method{TAPseqSeqTemplates}{GRangesList}(transcripts, genome,
  beads_oligo = "CTACACGACGCTCTTCCGATCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT")
}
\arguments{
\item{transcripts}{A \code{\link[GenomicRanges]{GRanges}} or
\code{\link[GenomicRanges]{GRangesList}} object containing exons of transcripts for which
sequence templates should be created. All exons in a \code{\link[GenomicRanges]{GRanges}}
object are assumed to belong to the same transcript. Multiple transcripts can be provided in a
\code{\link[GenomicRanges]{GRangesList}} object.}

\item{genome}{A \code{\link[BSgenome]{BSgenome}} or \code{\link[Biostrings]{DNAStringSet}}
object containing chromosome sequences which should be used to extract transcript sequences.}

\item{beads_oligo}{The Beads-oligo-dT sequence used for Droplet sequencing. Default is the
10x V3 Beads-oligo-dT sequence. Can be changed if primers are for instance designed for
Drop-seq. Any barcode bases need to be replaced by \code{N}.}
}
\value{
A \code{\link[Biostrings]{DNAString}} or \code{\link[Biostrings]{DNAStringSet}} object
  containing the sequence template(s).
}
\description{
Methods to create sequence templates for TAP-seq primer design. This extracts the transcript
sequence from the provided genome and adds the reverse complement of the "Beads-oligo-dT"
sequence to the 3' end.
}
\section{Methods (by class)}{
\itemize{
\item \code{GRanges}: Create sequence templates from \code{GRanges} input

\item \code{GRangesList}: Create sequence templates from \code{GRangesList} input
}}

\examples{
library(TAPseq)
library(Biostrings)

# truncated transcripts for chr11 target genes
data("chr11_truncated_txs")

# load human chr11 sequence from fasta file
chr11_seq_fasta <- system.file("extdata", "chr11_sequence.fasta.gz", package = "TAPseq")
chr11_seq <- readDNAStringSet(chr11_seq_fasta)

# create sequence templates for truncated transcripts
seq_templates <- TAPseqSeqTemplates(chr11_truncated_txs, genome = chr11_seq)

\dontrun{
# a probably more practical approach is to use Bioconductors BSgenome package to get the
# genome sequence
library(BSgenome)

# human genome (hg38) BSgenome object (needs to be istalled separately from Bioconductor)
hg38 <- getBSgenome("BSgenome.Hsapiens.UCSC.hg38")

# get sequences for all target transcripts on chr11
seq_templates <- TAPseqSeqTemplates(chr11_truncated_txs, genome = hg38)
}
}
