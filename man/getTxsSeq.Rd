% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_txs_seq.R
\docType{methods}
\name{getTxsSeq}
\alias{getTxsSeq}
\alias{getTxsSeq,GRangesList-method}
\alias{getTxsSeq,GRanges-method}
\title{Get transcript sequences}
\usage{
getTxsSeq(transcripts, genome)

\S4method{getTxsSeq}{GRangesList}(transcripts, genome)

\S4method{getTxsSeq}{GRanges}(transcripts, genome)
}
\arguments{
\item{transcripts}{A \code{\link[GenomicRanges]{GRanges}} or
\code{\link[GenomicRanges]{GRangesList}} object containing exons of transcripts for which
sequences should be extracted. All exons in a \code{\link[GenomicRanges]{GRanges}} object are
assumed to belong to the same transcript. Multiple transcripts can be provided in a
\code{\link[GenomicRanges]{GRangesList}} object.}

\item{genome}{A \code{\link[BSgenome]{BSgenome}} or \code{\link[Biostrings]{DNAStringSet}}
object containing chromosome sequences which should be used to extract transcript sequences.}
}
\value{
A \code{\link[Biostrings]{DNAString}} or \code{\link[Biostrings]{DNAStringSet}} object
  containing the transcript sequence(s).
}
\description{
Extract the DNA sequences of all exons of transcript models and concatenate to one sequence per
transcript. This is basically a wrapper for \code{\link[GenomicFeatures]{extractTranscriptSeqs}},
which makes sure that the exons are correctly sorted according to their position in the
transcript (3' to 5').
}
\section{Methods (by class)}{
\itemize{
\item \code{GRangesList}: Obtain transcript sequence from \code{GRangesList} input

\item \code{GRanges}: Obtain transcript sequence from \code{GRanges} input
}}

\examples{
\dontrun{
library(TAPseq)
library(Biostrings)

# protein-coding exons of transcripts within chr11 region
data("chr11_genes")
target_txs <- split(chr11_genes, f = chr11_genes$transcript_id)

# load human chr11 sequence from fasta file
chr11_seq_fasta <- system.file("extdata", "chr11_sequence.fasta.gz", package = "TAPseq")
chr11_seq <- readDNAStringSet(chr11_seq_fasta)

# get sequences for all target transcripts in chr11 region
tx_seqs <- getTxsSeq(target_txs, genome = chr11_seq)

# a probably more practical approach is to use Bioconductors BSgenome package to get the
# genome sequence
library(BSgenome)

# human genome (hg38) BSgenome object (needs to be istalled separately from Bioconductor)
hg38 <- getBSgenome("BSgenome.Hsapiens.UCSC.hg38")

# get sequences for all target transcripts on chr11
tx_seqs <- getTxsSeq(target_txs, genome = hg38)
}
}
\keyword{internal}
